x-postgres-db-variables: &db-variables
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: adminpassword
  POSTGRES_DB: booking_platform
x-postgres-admin-variables: &pgadmin-variables
  PGADMIN_DEFAULT_EMAIL: admin@mail.store
  PGADMIN_DEFAULT_PASSWORD: adminpassword
x-app-variables: &app-variables
  DEBUG: dev
  ALLOWED_HOSTS: http://localhost
  HOST: http://localhost:8000/

  DATABASE_HOST: db
  POSTGRES_DB: booking_platform
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: adminpassword

  DJANGO_SUPERUSER_USERNAME: admin
  DJANGO_SUPERUSER_EMAIL: admin@example.com
  DJANGO_SUPERUSER_PASSWORD: strongpassword

  REST_API_BASE: api/
services:
  db:
    image: postgres:latest
    container_name: vehicle_board_db
    environment: *db-variables
    ports:
      - "5432:5432"
    volumes:
      - ${VEHICLE_BOARD_DB_VOL_PATH:-./.docker/.postgres_data/volumes/vehicle_board/data}:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vehicle_board_pgadmin
    environment: *pgadmin-variables
    ports:
      - "5050:80"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '512M'
        reservations:
          cpus: '1'
          memory: '256M'

  app:
    container_name: vehicle_board_api
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    environment: *app-variables
    command: sh -c "poetry run python manage.py runserver 0.0.0.0:8080 && 
                    celery -A DjangoServer worker --loglevel=INFO"
    ports:
      - "80:8080"
    depends_on:
      - db
      - redis
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '512M'
        reservations:
          cpus: '1'
          memory: '256M'

  redis:
    image: redis:latest
    container_name: vehicle_board_redis
    volumes:
      - ${VEHICLE_BOARD_REDIS_VOL_PATH:-./.docker/.redis_data/volumes/vehicle_board/data}:/data
    ports:
      - "6379:6379"