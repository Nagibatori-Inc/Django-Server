x-postgres-db-variables: &db-variables
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
x-postgres-admin-variables: &pgadmin-variables
  PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
x-app-variables: &app-variables
  DEBUG: ${DEBUG}
  ALLOWED_HOSTS: ${ALLOWED_HOSTS}
  HOST: ${HOST}

  DATABASE_HOST: db
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  REDIS_HOST: redis
  REDIS_PORT: 6379

  DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
  DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
  DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}

  EMAIL_BACKEND: ${EMAIL_BACKEND}
  EMAIL_HOST: ${EMAIL_HOST}
  EMAIL_PORT: ${EMAIL_PORT}
  EMAIL_USE_TLS: ${EMAIL_USE_TLS}
  EMAIL_USE_SSL: ${EMAIL_USE_SSL}
  EMAIL_HOST_USER: ${EMAIL_HOST_USER}
  EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}

  SMSAERO_EMAIL: ${SMSAERO_EMAIL}
  SMSAERO_API_KEY: ${SMSAERO_API_KEY}
  SMS_MODE: ${SMS_MODE}

  REST_API_BASE: api/
services:
  db:
    image: postgres:latest
    container_name: vehicle_board_db
    environment: *db-variables
    volumes:
      - ${VEHICLE_BOARD_DB_VOL_PATH:-./.docker/.postgres_data/volumes/vehicle_board/data}:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vehicle_board_pgadmin
    environment: *pgadmin-variables
    ports:
      - "5050:80"
    depends_on:
      - db
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: '512M'
#        reservations:
#          cpus: '1'
#          memory: '256M'

  app:
    container_name: vehicle_board_api
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    environment: *app-variables
    command: sh -c "poetry run python manage.py runserver 0.0.0.0:8080 && 
                    celery -A DjangoServer worker --loglevel=INFO"
    ports:
      - "8000:8080"
    depends_on:
      - db
      - redis
#    deploy:
#      resources:
#        limits:
#          cpus: '2'
#          memory: '512M'
#        reservations:
#          cpus: '1'
#          memory: '256M'

  redis:
    image: redis:latest
    container_name: vehicle_board_redis
    volumes:
      - ${VEHICLE_BOARD_REDIS_VOL_PATH:-./.docker/.redis_data/volumes/vehicle_board/data}:/data
    ports:
      - "6379:6379"
  lgtm:
    image: grafana/otel-lgtm
    container_name: lgtm
    volumes:
      - ./stats_configs/prometheus.yaml:/otel-lgtm/prometheus.yaml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3030:3000"
      - "4317:4317"
      - "4318:4318"
      - "9090:9090"
    restart: unless-stopped